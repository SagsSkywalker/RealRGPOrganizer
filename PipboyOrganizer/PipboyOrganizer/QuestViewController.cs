// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Firebase.Database;
using Foundation;
using PipboyOrganizer.Models;
using UIKit;

namespace PipboyOrganizer {
	public partial class QuestViewController : UIViewController, IUITableViewDelegate, IUITableViewDataSource {
		public int c = 0;

		public QuestViewController (IntPtr handle) : base (handle)
		{

		}

		public override void ViewDidLoad ()
		{
            tblQuests.ReloadData();
			base.ViewDidLoad ();
            tblQuests.Delegate = this;
            tblQuests.DataSource = this;

		}

		public override void PrepareForSegue (UIStoryboardSegue segue, NSObject sender)
		{
			
			if (segue.Identifier == "QuestDetail") {
				var indexPath = tblQuests.IndexPathForSelectedRow;
				var vc = segue.DestinationViewController as QuestInfoViewController;
				vc.selectedQuest = UserPersistanceClass.myUser.ActiveQuests [indexPath.Row];
				PerformSegue ("QuestDetail", sender);
			}
		}


		public UITableViewCell GetCell (UITableView tableView, NSIndexPath indexPath)
		{
            var cell = tableView.DequeueReusableCell ("MainTableViewCell", indexPath) as MainTableViewCell;
			cell.QuestName = UserPersistanceClass.myUser.ActiveQuests [indexPath.Row].Name;
			cell.QuestDescription = UserPersistanceClass.myUser.ActiveQuests [indexPath.Row].Description;

			foreach (var stage in UserPersistanceClass.myUser.ActiveQuests [indexPath.Row].QuestStages) {
				if (!stage.isCompleted) {
					cell.LastStage = stage.Description;
				}
			}

			tableView.RowHeight = 100;
			tableView.EstimatedRowHeight = 50;
			return cell;


		}
		public override void PerformSegue (string identifier, NSObject sender)
		{
			
				
		}

		public nint RowsInSection (UITableView tableView, nint section)
		{
            return UserPersistanceClass.myUser?.ActiveQuests == null ? 0 : UserPersistanceClass.myUser.ActiveQuests.Count;
		}



	}
}
